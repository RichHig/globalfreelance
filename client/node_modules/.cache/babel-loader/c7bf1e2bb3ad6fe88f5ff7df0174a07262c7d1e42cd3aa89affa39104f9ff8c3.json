{"ast":null,"code":"var _jsxFileName = \"/Users/rich/Desktop/globalfreelance/client/src/components/CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { PaymentElement, LinkAuthenticationElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n    const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n    if (!clientSecret) {\n      return;\n    }\n    stripe.retrievePaymentIntent(clientSecret).then(_ref => {\n      let {\n        paymentIntent\n      } = _ref;\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          setMessage(\"Payment succeeded!\");\n          break;\n        case \"processing\":\n          setMessage(\"Your payment is processing.\");\n          break;\n        case \"requires_payment_method\":\n          setMessage(\"Your payment was not successful, please try again.\");\n          break;\n        default:\n          setMessage(\"Something went wrong.\");\n          break;\n      }\n    });\n  }, [stripe]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000/success\"\n      }\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    className: \"m-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(LinkAuthenticationElement, {\n      id: \"link-authentication-element\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\",\n      options: paymentElementOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading || !stripe || !elements,\n      id: \"submit\",\n      className: \"border border-solid mt-2 p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 24\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"LhWChBKfkari0zZNBtJ4IuzMdKY=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","PaymentElement","LinkAuthenticationElement","useStripe","useElements","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","email","setEmail","message","setMessage","isLoading","setIsLoading","clientSecret","URLSearchParams","window","location","search","get","retrievePaymentIntent","then","_ref","paymentIntent","status","handleSubmit","e","preventDefault","error","confirmPayment","confirmParams","return_url","type","paymentElementOptions","layout","id","onSubmit","className","children","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","options","disabled","_c","$RefreshReg$"],"sources":["/Users/rich/Desktop/globalfreelance/client/src/components/CheckoutForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  PaymentElement,\n  LinkAuthenticationElement,\n  useStripe,\n  useElements,\n} from \"@stripe/react-stripe-js\";\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n\n    const clientSecret = new URLSearchParams(window.location.search).get(\n      \"payment_intent_client_secret\"\n    );\n\n    if (!clientSecret) {\n      return;\n    }\n\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          setMessage(\"Payment succeeded!\");\n          break;\n        case \"processing\":\n          setMessage(\"Your payment is processing.\");\n          break;\n        case \"requires_payment_method\":\n          setMessage(\"Your payment was not successful, please try again.\");\n          break;\n        default:\n          setMessage(\"Something went wrong.\");\n          break;\n      }\n    });\n  }, [stripe]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setIsLoading(true);\n\n    const { error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000/success\",\n      },\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n\n    setIsLoading(false);\n  };\n\n  const paymentElementOptions = {\n    layout: \"tabs\",\n  };\n\n  return (\n    <form id=\"payment-form\" onSubmit={handleSubmit} className=\"m-4 p-4\">\n      <LinkAuthenticationElement\n        id=\"link-authentication-element\"\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <PaymentElement id=\"payment-element\" options={paymentElementOptions} />\n      <button disabled={isLoading || !stripe || !elements} id=\"submit\" className=\"border border-solid mt-2 p-3\">\n        <span id=\"button-text\">\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n        </span>\n      </button>\n      {/* Show any error or success messages */}\n      {message && <div id=\"payment-message\">{message}</div>}\n    </form>\n  );\n};\n\nexport default CheckoutForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}